pub signal unit.HeroExit

pub fn unit.Hero(owner, pos=@(0,0), radius=1.0, density=1) {
	.. color=#aaa, ownerColor=true
	.. depth=Depth:Unit, durability=Durability:Maximum
	.. categories=(Category:Hero | Category:CanGrab | Category:HurtByLava | Category:Aoe)
	.. collideWith=Category:Solid, sense=Category:Zone, ccd=true

	.. entrance = pos + 40.0 * Direction(pos), heading = Angle(pos - entrance)
	.. exitSpeed = 5.0

	Unit

	// Body
	Body(entrance, heading=)
	PrepareForCollision
	DecayingMotion

	GoldBehavior
	ShopService

	// Health
	Health(100)
	on Hurt {
		Strobe(dissipation=10, shine=0.5, growth=0.5)
	}
	once BeforeOutOfHealth {
		Puff(count=10, luminous=1.0, shine=1.0, bloom=2.0, dissipation=30, splatter=Splatter:Outwards(10.0))
		Hear(Hero:Explode)
		Hear(Hero:Death)
	}

	// Movement
	Movement:Walk(speed=9.6)
	Movement:Turn
	hook Pointer {
		Movement:LookAt(Pointer)
	}
	on Movement:Turned step {
		if Abs(step) > 0.125rev {
			Strobe<turning>(dissipation=15, growth=0.15)
		}
	}

	// Entrance animation
	Subscope {
		.. dissipation=30, luminous=1, shine=0

		Tangibility
		Vulnerability(-1)
		SpeedModifier(-1)
		RayEmitter(radius * 1.5, glare=0.5, bloom=3, bloomAlpha=1, shadow=0.5)

		await Tween(duration=dissipation, initial=0.0, final=1.0) blend {
			unit.Pos = (blend ** 2.0).Mix(unit.Pos, pos)
		}
	}
	
	// Exit animation
	once HeroExit {
		Unkillable // Stop the unit dying during their exit animation
		once BeforeOutOfHealth { } // Remove BeforeOutOfHealth handler to stop the death sound from playing after the animation is complete

		Subscope {
			.. dissipation=30, luminous=1, shine=0

			RayEmitter(radius * 1.5, glare=0.5, bloom=3, bloomAlpha=1, shadow=0.5)

			await Tween(duration=dissipation, initial=1.0, final=0.0) blend {
				unit.Pos += blend * exitSpeed * Direction(unit.Pos) // Just move away from center each tick
			}

			unit.Expire
		}
	}

	// Cleanse on game start
	once AfterCommence {
		CleanseBuffs
		SeverTethers
	}

	hook<render> SizeModifier, Vanished {
		await TickEnd // Don't change anything until the tick is finished and we are abougt to render so we can collate multiple changes together
		.. radius = radius * SizeModifier

		if Vanished {
			delete Sprite<glyph>
			delete Sprite<hero>
			delete Nametag
			delete Healthbar
			delete Goldtag
		} else {
			Sprite<hero>(shadow=0.5, shading=0.4) {
				Perimeter {
					Shape:Circle(radius=)
				}
			}
			
			Sprite<glyph>(depth=depth - 1, ownerColor=false, color=#fff8, luminous=1) {
				Glyph(radius=, glyph=Hero:Arrowhead)
			}
			
			Healthbar(unit, height=0.2*radius, width=2*radius, verticalOffset = -1.5 * radius)
			Nametag(offset=1.5, anchorTop=true, ownerColor=false, luminous=1)
			Goldtag(offset=-1.5, anchorTop=false, anchorBottom=true, ownerColor=false, luminous=1)
		}
	}

	hook<physics> SizeModifier, Tangibility, SenseAlso, DensityModifier {
		await PhysicsStart // Don't change anything until the physics is about to happen so we can collate multiple changes together
		.. radius = radius * SizeModifier
		.. density = density * DensityModifier
		.. collideWith = collideWith & Tangibility
		.. sense = sense | SenseAlso

		if collideWith || sense {
			Collider(.. collideWith sense density) {
				Shape:Circle(radius=)
			}

		} else {
			// If we collide with nothing, become intangible - completely remove the collider.
			// This ensures we also won't be found even by area-of-effect queries, for example.
			delete Collider
		}
	}
}

sound Hero:Death(duration=0.3s) {
	Vibrato(freqModulation=140) {
		WhiteNoise
	}
	Oscillator(wave=$sine, freq=35, harmonics=[1,1.5,2,4,16])
	LowPass(freq=[560,0], q=1)
	Tremolo(volumeModulation=1.0) {
		Oscillator(freq=[17.5,0])
	}
	Envelope(attack=0.01s, decay=0.05s, sustainVolume=0.4, sustain=0s)
}

sound Hero:Explode(duration=1.0s) {
	Vibrato(freqModulation=280) {
		WhiteNoise
	}
	Oscillator(wave=$triangle, freq=35)
	LowPass(freq=[140,0], q=1)
	Envelope(attack=0.01s, decay=0.05s, sustainVolume=0.2, sustain=0s)
}

glyph Hero:Arrowhead(path="M 256,0 C 190.36953,0 130.5363,24.714581 85.232422,65.3125 L 256,256 84.410156,445.97461 C 129.80926,487.00513 189.9782,512 256,512 L 384,256 Z")
