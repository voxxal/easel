pub field team.TeamSize

pub fn this.AssignTeams(teamProbability=0.5, maxTeams=4) {
	const players = QueryPlayers

	// Create teams
	const numPlayers = players.Length
	let numTeams = null
	for candidateNumTeams in RangeInclusive(2, maxTeams) {
		if numPlayers < candidateNumTeams * 2 { break } // Not enough players for this many teams
		if numPlayers % candidateNumTeams == 0 && Random < teamProbability {
			numTeams = candidateNumTeams
			break
		}
	}
	if !numTeams { return }

	const teams = []
	repeat numTeams {
		teams.Push(Spawn)
	}
		
	// Assign players to teams
	for i in Range(0, numPlayers) {
		const team = teams[i % teams.Length]
		players[i].Team = team
		team.TeamSize += 1
	}

	// Announce teams
	OverlayTransmission(duration=3s) {
		Standout {
			FlyInChars(teams.Map(|t| t.TeamSize).Join("v"))
		}
	}

	Transmission(duration=90s) {
		P(fontSize=1.1) {
			Span(bold=true, color=#ffcc00) { %(teams.Map(|t| t.TeamSize).Join("v")) }
			": protect your allies!"
		}
	}
}