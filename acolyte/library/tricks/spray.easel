pub await fn Spray(spray=0.25rev, duration=, count=, step=1) |index, headingOffset| {
	// Calculate the angle per division
	let numDivisions = Ceiling(count / 2) // Divide by 2 because we allocate half the count to the left and half to the right

	let perDivision = spray / (count - 1)

	let angleOffset = 0.0
	let indexOffset = 0
	if count % 2 {
		// If odd, only shoot to the middle once
		indexOffset = 1
	} else {
		// If even number of shots, the first shots will be separated by half a division
		angleOffset = perDivision / 2.0
	}

	// Fire loop
	let start = Tick()
	for index in Range(0, count) {
		// Wait for the appropriate time to fire the next shot
		let fireStart = start + duration * index / count
		let sleep = Floor(fireStart - Tick)
		
        // Wait to begin the next repeat
        if sleep > 0 {
    		await Tick(sleep)
        }

		// Calculate the angle offset
		let sideIndex = Floor((index + indexOffset) / 2) // Half the index since we are doing only the left or right side individually
		let headingOffset = ((step * sideIndex) % numDivisions) * perDivision + angleOffset
		if index % 2 {
			headingOffset = -headingOffset
		} // Go left or right

		// Fire
		delve(index, headingOffset)
	}
}