pub fn Flutter:Shorthand(flutter) {
	if flutter == $perimeter { return Flutter:Perimeter() }
	else if flutter == $area { return Flutter:Area() }
	else { return flutter }
}

pub fn Flutter:Swirl(radius, period=15, angleOffset=0rev) {
	return (body,phase) => {
		let angle = (1rev * (Tick % period) / period) + angleOffset + (1rev * phase)
		let offset = radius * Direction(angle)
		return Rotate(offset, body.Heading)
	}
}

pub fn Flutter:Helix(radius, period=15, angleOffset=0rev) {
	return (body,phase) => {
		let angle = (1rev * (Tick % period) / period) + angleOffset + (1rev * phase)
		let shift = radius * Sin(angle)
		let offset = @(0,shift)
		return Rotate(offset, body.Heading)
	}
}

pub fn Flutter:Perimeter(radiusFraction=1) {
	return (body,phase) => {
		let offset = body.TracePerimeter(perimeterFraction=Random, radiusFraction=)
		return Rotate(offset, body.Heading)
	}
}

pub fn Flutter:Area {
	return (body,phase) => {
		let offset = body.TracePerimeter(perimeterFraction=Random, radiusFraction=Random)
		return Rotate(offset, body.Heading)
	}
}