prop World.CountdownRemaining

pub signal World.BeginCommenceCountdown

pub behavior fn World.CommenceCountdownWhenEnoughPlayers(lockedDuration=3s) numPlayers {
	loop {
		if IsReadyToBegin { break }

		await BeginCommenceCountdown
		const countdown = delve(NumPlayers)
		if !(countdown >= 0) { continue } // check countdown is a number before continuing

		let remaining = countdown
		let countdownComplete = false
		loop {
			if remaining <= 0 {
				countdownComplete = true
				break
			}

			CountdownDialog(remaining + lockedDuration)
			await Sleep(1s)
			remaining -= 1s

			const countdown = delve(NumPlayers)
			if countdown >= 0 {
				remaining = Min(countdown, remaining)
			} else {
				break // Stop the countdown
			}
		}
		delete CountdownDialog

		if countdownComplete {
			ReadyToBegin(lockedDuration)
			break
		}
	}
}

fn World.CountdownDialog(remaining) {
	if remaining > 0 {
		Transmission<countdown>(duration=remaining) {
			P(scale=0.9) {
				%("Waiting ")
				Span(bold=true) {
					%(Ceil(remaining / TicksPerSecond))
					%(" seconds")
				}
				%(" for more players to join...")
			}
		}
	} else {
		delete Transmission<countdown>
	}
}
delete fn World.CountdownDialog() {
	delete Transmission<countdown>
}