field that.CurrentBuff<Id>
field that.NumContacts<Id> // The unit might be touching multiple zones of the same type at once, count so that we remove the buff only when all contacts are gone

pub fn body.BuffOnContact<Id>(.. filter=Category:Hero, reuse=true) that .. *buff {
    on body.BeforeCollide that {
        if that.Category & filter {
            that.NumContacts<Id> += 1

            if !reuse {
                that.CurrentBuff<Id>.Despawn // Always destroy and re-create the buff
            }

            // Create the buff
            if !Exists(that.CurrentBuff<Id>) {
                that.CurrentBuff<Id> = that.Subspawn buff {
                    delve()
                }
            }
        }
    }

    on body.AfterCollide that {
        if (that.Category & filter) && that.NumContacts<Id> > 0 {
            that.NumContacts<Id> -= 1
            if that.NumContacts<Id> <= 0 {
                that.CurrentBuff<Id>.Despawn // All contacts ended, destroy the buff
            }
        }
    }
}