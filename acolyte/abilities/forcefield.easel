use glyph=@woodenFence.svg, color=#3366ff, cooldown=9s, lifetime=2.0s
use easeInFraction=0.05

pub symbol WantForcefield

pub fn ForcefieldDescription([ui]) {
    H1 { "Forcefield" }

    P {
        "Forge an impressive barrier of shimmering light that resolutely repels foes and their onslaughts. Fortunately, you may pass through your radiant barrier unhindered, allowing you to navigate the battlefield with ease while your adversaries are left confounded by its impenetrable presence."
    }

    SlotEffect("Unhindered Passage", icon="fas fa-person-walking") {
        "You can walk through your own Forcefield."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn ForcefieldOption([ui]) {
	SlotOption(WantForcefield) {
        ForcefieldDescription
	}
}

pub fn ability.ForcefieldAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotDeflecting target {
		if Cooldown == 0 {
			let mid = unit.Pos + (target - unit.Pos) / 2.0
			BotUseAbility(target=mid)
		}
	}

    AbilityCommandBtn {
        ForcefieldDescription
    }

	SpawnEachIncantation incantation {
		Spawn shield {
			use parent=unit, body=shield
			use dissipate=10
			use extent=6.0, radius=0.25, maxDistance=20
			use luminous=1, layer=Layer:Shield

			Body(parent.Pos.Towards(Pointer, maxDistance), heading=Angle(Pointer - parent.Pos), bullet=true)
			Durability = Durability:Reflector
			DecaySpeed
			DecayTurnRate
			Sing(@forcefield.esfx)
			ExpireAfterLifetime

			PolygonCollider(
                Capsule(angle=0.25rev),
                passthroughParent=true,
                category = Category:Shield | Category:Obstacle | Category:Aoe,
                collideWith = Category:Tangible ^ Category:Shield ^ Category:Obstacle,
                density=100.0, restitution=1.0,
            )

			on Hurt {
				Strobe(dissipate=10, shine=1.0)
			}

			Tween(duration=lifetime, initial=0, final=1) a {
				use fade = a * 0.5, color=color.Fade(fade)
				use ease = Min(1, a/easeInFraction), extent=extent*ease

				PolygonSprite(
					Capsule(angle=0.25rev),
					flicker=0.1, shadow=0.25, glare=1, glareAlpha=1-fade, bloom=5.0, bloomAlpha=1) 
			}

			on BeforeCollide that {
				if that.Category.Overlaps(Category:Projectile) {
					Hear(@forcefieldHit.esfx)
				}
			}
		}
	}
}