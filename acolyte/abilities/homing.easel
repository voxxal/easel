use glyph=@boltSaw.svg, color=#44ffcc, damage=16, lifesteal=0.3, cooldown=9.0s

pub symbol WantHoming

prop projectile.Repossessor

pub fn HomingDescription([ui]) {
    H1 { "Homing" }

    P {
        "Summon a tenacious, enchanted sphere that ceaselessly pursues your enemy. While they are preoccupied, seize the opportunity to unleash a barrage of your most potent abilities upon them."
    }

    SlotEffect("Ceaseless Pursuit", icon="fas fa-crosshairs") {
        "Homing seeks the enemy that was nearest to your cursor when launched."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Lifesteal", icon="fas fa-circle-plus") { %((lifesteal * 100.0) + "%") }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn HomingOption([ui]) {
	SlotOption(WantHoming) {
        HomingDescription
	}
}

pub fn ability.HomingAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotAttacking target {
		if Cooldown == 0 {
			BotUseAbility(utility=Utility:High)
		}
	}

    AbilityCommandBtn {
        HomingDescription
    }

	SpawnEachIncantation incantation {
		use damage = damage * unit.DamageModifier

		Spawn projectile {
			use parent=unit, body=projectile
			use lifetime=3.5s, dissipate=30, ownerColor=Alliance:Self
			use radius=0.24, speed=12
			use luminous=1, layer=Layer:Projectile

			Body(pos=parent.Pos, heading=parent.Heading, velocity=speed*Direction(heading), bullet=true)
			Durability = Durability:High
			RecoverSpeed
			DecayTurnRate
			ExpireAfterLifetime
			Sing(@homing.esfx)

			PolygonSprite(Circle)
			PolygonCollider(
                Circle,
                category=Category:Projectile | Category:Aoe,
                density=35, restitution=1,
            )

			with Repossessor {
				use owner = Repossessor ?? owner
				Homing(Pointer.QueryNearest(filter=Category:Unit, against=Alliance:Enemy), turnProportion=0.05)

				on Paint {
					Streak(
                        radius=, fade=0,
                        bloom=3, bloomAlpha=1, glare=1, shadow=0.25,
                        screenOffset=HelixOffset(radius * 0.5, period=18)
                    )
					Streak(
                        radius=0.5*radius, fade=1, bloom=0, glare=0,
                        bloomAlpha=1, glare=1, shadow=0.25,
                        screenOffset=HelixOffset(radius * 2.0, period=18, angleOffset=0.4rev))
				}
			}

			on BeforeCollide that {
				if CanHurtSelf || owner.Team != that.Team {
					Attack(that)

					if that.Category.Overlaps(Category:Shield) && that.Team != owner.Team {
						CanHurtSelf = true // Can bounce off shield to hurt self
						this.Repossessor = that.Owner // Change the owner
					}

					that.Tombstone victim {
						PlayerNameDisplay(owner)
						"'s endless pursuit ended "
						PlayerNameDisplay(victim)
					}
				}
			}
			on AfterCollide that {
				if that.Durability >= this.Durability {
					Strobe(growth=0.25, shine=1.0)
					repeat 10 { Spark(splatter=1, feather=1, shine=0.5) }
					Expire
				}
			}
		}
	}
}