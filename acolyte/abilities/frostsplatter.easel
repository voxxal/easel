.. glyph=Frostfire:Glyph, color=#44ffff, cooldown=5.0s, damage=0, slowProportion=0.5, buffDuration=1.25s

pub symbol WantFrostsplatter

pub fn FrostsplatterOption(.. ui) {
	SlotOption<WantFrostsplatter> {
		H1 { %("Frostsplatter") }

		P {
			%("Summon a fierce blast of frigid winds that slows nearby enemies to a crawl and blows away incoming attacks.")
		}

		P {
			SlotEffect("Frigid Stagger", icon="fas fa-snowflake") {
				%("Slows nearby enemies by " + (slowProportion * 100.0) + "% for " + (buffDuration / TicksPerSecond) + "s.")
			}
		}

		SlotStats {
			SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
		}
	}
}

pub fn ability.FrostsplatterAbility(unit, owner, btn) {
	on BotDeflecting {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

	Incantation {
		TurnRateModifier(-1)

		Hear(Frostsplatter:Sound)
		await Spray(duration=3, count=6, spray=0.3revs) {
			Spawn projectile {
				.. parent=unit
				.. lifetime=25, dissipation=10
				.. radius=0.8, speed=16
				.. density=12.0, restitution=0, durability=Durability:Low, ccd=true
				.. feather=0.7, glare=0.7, glareAlpha=0.4, bloom=0, luminous=0, depth=Depth:Projectile
				.. categories=Category:Projectile, sense = Category:Projectile | Category:Hero

				LaunchBody
				PrepareForCollision
				PropulsiveMotion
				Bloom(bloom=0.8, luminous=1)
				Smoke(radius=1.2, dissipation=30, splatter=0.8, color=#4ff4, fade=1)
				ExpireAfterLifetime

				Collider {
					Shape:Circle
				}

				on BeforeCollide that {
					if (that.Category & Category:Hero) && that.Team != owner.Team {
						Attack(that)

						that.Tombstone victim {
							NameBlock(owner)
							%(" chilled ")
							NameBlock(victim)
							%(" with dis-gust")
						}

						that.ReplaceBuff<cold>(cleansable=true) {
							ExpireAfterLifetime(buffDuration)
							SpeedModifier(-slowProportion, that)
							Smoke(that,
								color=#4ff4, fade=1, feather=0.5,
								radius=1.0, dissipation=20, depth=Depth:Particle,
								flutter=$perimeter, splatter=Splatter:Outwards(12))
						}
					}
				}
				on AfterCollide that {
					if that.Durability >= this.Durability {
						Strobe(shine=1)
						Expire
					}
				}

				Wind(1.0, radius=, filter=Category:Projectile, against=(Alliance:Enemy | Alliance:Neutral))
			}
		}
	}
}

sound Frostsplatter:Sound(duration=0.6s, cutoff=0.5s) {
	BrownNoise
	BandPass(freq=125, q=1)
	Envelope(attack=0.07s, sustain=0s)
}