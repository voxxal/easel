.. glyph=BoomerangSun:Glyph, color=#ff00ff, damage=25.0, lifesteal=0.3, cooldown=11.0s

pub symbol WantOrbiter

pub fn OrbiterOption(.. ui) {
	SlotOption<WantOrbiter> {
		H1 { %("Orbiter") }

		P {
			%("Summon a powerful energy sphere that orbits you at a fixed range. Keep your foes at this ideal distance and catch them in your burning orbit.")
		}

		SlotStats {
			SlotStat("Damage", icon="fas fa-sword") { %(damage) }
			SlotStat("Lifesteal", icon="fas fa-heart") { %((lifesteal * 100.0) + "%") }
			SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
		}
	}
}

pub fn ability.OrbiterAbility(unit, owner, btn) {
	on BotAttacking {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

	Incantation {
		.. damage = damage * unit.DamageModifier

		Spawn projectile {
			.. parent=unit
			.. lifetime=4s, dissipation=30, ownerColor=Alliance:Self
			.. radius=0.24, speed=48, bounceSpeed=10
			.. luminous=1.0, depth=Depth:Projectile
			.. density=1.0, ccd=true
			.. categories=Category:Projectile, durability=Durability:Medium

			LaunchBody
			PrepareForCollision
			PropulsiveMotion
			Smoke(luminous=1, splatter=0.2)
			Sing(Orbiter:Sound)
			ExpireAfterLifetime

			Collider {
				Shape:Circle
			}

			RayEmitter(glare=0.5, luminous=0.5, dissipation=60)
			Homing(unit, turnProportion=0.05)
			on BeforeCollide that {
				if that.Team != owner.Team {
					Attack(that)

					that.Tombstone victim {
						NameBlock(owner)
						%(" caught ")
						NameBlock(victim)
						%(" in their burning orbit ")
					}
				}
			}
			on AfterCollide that {
				if that.Durability >= this.Durability {
					if that.Category & Category:Obstacle {
						if Speed > bounceSpeed {
							Speed = bounceSpeed
						}
					} else {
						Strobe(growth=1.0, shine=0.5)
						Puff(count=10, splatter=1)
						Hear(Orbiter:HitSound)
						Expire
					}
				}
			}
		}
	}
}

sound Orbiter:Sound(duration=4s, cutoff=0.5s) {
	BrownNoise
	BandPass(freq=820, q=15)
	Envelope(attack=0.25s, sustain=0s)
	Output

	Oscillator(wave=$sine, freq=205, harmonics=[1, 1.5, 2, 2.75, 4, 5.5])
	LowPass(freq=100)
	Tremolo(volumeModulation=0.6) {
		Oscillator(freq=7)
	}
	Envelope(attack=0.25s, sustain=0s)
}

sound Orbiter:HitSound(duration=0.33s) {
	Oscillator(wave=$square, freq=[100,0], harmonics=[1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2])
	LowPass(freq=250)
	Envelope(attack=0.01s, sustain=0s)
}