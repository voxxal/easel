.. glyph=Resonance:Glyph, color=#ff00dd, maxDuration=0.75s, cooldown=5s

pub symbol WantPhaseShift

pub fn PhaseShiftOption(.. ui) {
	SlotOption<WantPhaseShift> {
		H1 { %("Phase Shift") }

		P {
			%("Press and hold to momentarily vanish from the world, becoming impervious to harm as you transcend the mortal plane.")
		}

		P {
			SlotEffect("Ethereal Exhaustion", icon="fas fa-hourglass-half") {
				%("Cooldown increases the longer you stay in Phase Shift.")
			}
		}

		SlotStats {
			SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
		}
	}
}

pub fn ability.PhaseShiftAbility(unit, owner, btn) {
	on BotDeflecting {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

	Incantation {
		.. radius=1.0, dissipation=15, shine=1, luminous=1, depth=Depth:Projectile

		const birth = Tick

		on BotChannelling {
			const channelDuration=0.5s

			let age = Tick - birth
			if age < channelDuration {
				BotKeepChannelling
			}
		}

		CooldownRate(-1)
		SpeedModifier(-1)
		Vulnerability(-1)
		Tangibility(Category:None)
		FilterCategoriesModifier(Category:All ^ Category:Aoe)
		Vanished(true)
		Invisibility(true)
		SeverTethers
		Speed = 0

		Puff(count=10, color=#111111, fade=1, flicker=1, splatter=Splatter:Outwards(12.0), feather=1)
		Hear(PhaseShift:Sound)

		once Expire {
			Puff(count=10, color=#111111, fade=1, flicker=1, splatter=Splatter:Outwards(12.0), feather=1)
			Hear(PhaseShift:Sound)
		}

		on<coolup> Tick {
			Cooldown += 5
		}

		once Sleep(maxDuration) {
			StopIncantation
		}

		await ability.ReleaseCommand
	}
}

sound PhaseShift:Sound(duration=0.25s) {
	Oscillator(wave=$sine, freq=[60,40], harmonics=[1,1.5])
	Envelope(attack=0.01s, sustain=0s)
	Gain(volume=0.25)
}