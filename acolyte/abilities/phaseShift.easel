use glyph=@resonance.svg, color=#ff00dd, maxDuration=0.75s, cooldown=5s

pub symbol WantPhaseShift

pub fn PhaseShiftDescription([ui]) {
    H1 { "Phase Shift" }

    P {
        "Press and hold to momentarily vanish from the world, becoming impervious to harm as you transcend the mortal plane."
    }

    SlotEffect("Ethereal Exhaustion", icon="fas fa-hourglass-half") {
        "Cooldown increases the longer you stay in Phase Shift."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn PhaseShiftOption([ui]) {
	SlotOption(WantPhaseShift) {
        PhaseShiftDescription
	}
}

pub fn ability.PhaseShiftAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotDeflecting target {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

    AbilityCommandBtn {
        PhaseShiftDescription
    }

	SpawnEachIncantation incantation {
		use radius=1.0, dissipate=15, shine=1, luminous=1, layer=Layer:Projectile

		const birth = Tick

		on BotChannelling target {
			const channelDuration=0.5s

			let age = Tick - birth
			if age < channelDuration {
				BotKeepChannelling
			}
		}

		CooldownRate(0)
		SpeedModifier(0)
		Vulnerability(0)
		Tangibility(Category:None)
		Vanished(true)
		Untrackable(true)
		Invisibility(true)

        ClearHalos
		UngrabMe
		UngrabThem
		Speed = 0

		repeat 10 { Spark(color=#111111, fade=1, flicker=1, speed=12, feather=1, shine=0.5) }
		Hear(@phaseShift.esfx)

		once BeforeDespawn {
			repeat 10 { Spark(color=#111111, fade=1, flicker=1, speed=12, feather=1, shine=0.5) }
			Hear(@phaseShift.esfx)
		}

		on Tick {
			Cooldown += 5
		}

		once Tick(maxDuration) {
			incantation.Expire
		}

		await ButtonUp
	}
}