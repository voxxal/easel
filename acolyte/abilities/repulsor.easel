use glyph=@lightningHelix.svg, color=#ffaa00, damage=0, cooldown=9s, recoilSpeed=40

pub symbol WantRepulsor

pub fn RepulsorDescription([ui]) {
    H1 { "Repulsor" }

    P {
        "Emit an intense beam of energy which drives your foes backward. Exercise caution, as its fierce recoil propels you backward too, either catapulting you into peril or hastening your retreat to safety. "
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn RepulsorOption([ui]) {
	SlotOption(WantRepulsor) {
        RepulsorDescription
	}
}

pub fn ability.RepulsorAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotAttacking target {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

	on BotRecovering target {
		if Cooldown == 0 {
			// Shoot the repulsor in the opposite direction to the target so the recoil returns us towards it
			BotUseAbility(utility=Utility:Low, target = unit.Pos - Direction(target - unit.Pos))
		}
	}

    AbilityCommandBtn {
        RepulsorDescription
    }

	SpawnEachIncantation incantation {
		TurnRateModifier(0)
		await ChargeForDuration(6) {
			ChargingIndicator
		}
		unit.Velocity += -recoilSpeed * Direction(Heading)

		Spawn projectile {
			use parent=unit, body=projectile
			use lifetime=0.5s, dissipate=30
			use radius=0.2, speed=240.0
			use luminous=1, layer=Layer:Projectile

			Body(pos=parent.Pos, heading=parent.Heading, velocity=speed*Direction(heading), bullet=true)
			Durability = Durability:High
			RecoverSpeed
			DecayTurnRate
			Sing(@repulsor.esfx)
			ExpireAfterLifetime

			PolygonCollider(
                Circle,
                category=Category:Projectile,
                collideWith = Category:Tangible ^ Category:Projectile,
                density=12, restitution=1,
            )

			on Paint {
				Streak(fade=1, bloom=3, bloomAlpha=1, glare=1, shadow=0.25)
			}

			on BeforeCollide that {
				if that.Team != owner.Team {
					Attack(that)

					that.Tombstone victim {
						PlayerNameDisplay(owner)
						" repulsed "
						PlayerNameDisplay(victim)
						" to the realm of no return "
					}
				}
			}
			on AfterCollide that {
				if that.Durability >= this.Durability {
					Strobe(shine=0.5)
					repeat 5 { Spark(splatter=1, feather=1, shine=0.5) }
					Expire
				}
			}
		}
	}
}