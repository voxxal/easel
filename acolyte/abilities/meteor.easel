use glyph=@cometSpark.svg, color=#ff0000, damage=0, cooldown=9.0s

pub symbol WantMeteor

pub fn MeteorDescription([ui]) {
    H1 { "Meteor" }

    P {
        "Summon a colossal meteor that hurtles towards your foes, shielding you from harm with its unstoppable momentum and unwavering absorption of all incoming attacks, enduring them without so much as a flinch. "
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn MeteorOption([ui]) {
	SlotOption(WantMeteor) {
        MeteorDescription
	}
}

pub fn ability.MeteorAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotDeflecting target {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

    AbilityCommandBtn {
        MeteorDescription
    }

	SpawnEachIncantation incantation {
		Spawn projectile {
			use parent=unit, body=projectile
			use lifetime=2s, dissipate=24
			use radius=2.88, speed=16
			use feather=0, bloom=0, shine=0, glare=0, luminous=0, layer=Layer:Projectile

			Body(pos=parent.Pos, heading=parent.Heading, velocity=speed*Direction(heading), bullet=true)
			Durability = Durability:Maximum
			RecoverSpeed(speedDecay=0.2)
			DecayTurnRate
			Hear(@meteorLaunch.esfx)
			Sing(@meteor.esfx)
			ExpireAfterLifetime

			PolygonCollider(
                Equilateral(numPoints=4, angle=0.125rev),
                category = Category:Projectile | Category:Grabbable | Category:Aoe | Category:Disintegrator,
                collideWith = Category:Tangible ^ Category:Shield,
                density=140, restitution=0,

                // passthroughSiblings=false so the Grapple can immediately collide with a sibling like a Meteor even when it is spawned inside of the Meteor
                passthroughSiblings=false,
			)

			on Paint {
                // Make the visual radius ever so slightly bigger to try to make the circle visuals match the square hitbox
				Spark(radius=1.1*radius, splatter=0.5, fade=#900, shadow=0.25)
			}

			on Hurt {
				Strobe(shine=1.0)
			}

			on BeforeCollide that {
				if that.Team != owner.Team {
					Attack(that)

					that.Tombstone victim {
						PlayerNameDisplay(owner)
						" drove "
						PlayerNameDisplay(victim)
						" to their downfall "
					}
				}
			}
		}
	}
}