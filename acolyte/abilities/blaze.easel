use glyph=@fireWave.svg, color=#ff00cc, damage=10, lifesteal=0.3, speed=64, cooldown=10.0s

pub symbol WantBlaze

pub fn BlazeDescription([ui]) {
    H1 { "Blaze" }

    P {
        "Perform a swift, incendiary dash, setting the battlefield ablaze as you surge through your adversaries. Harness this blazing velocity to skillfully evade peril or bridge distances, adeptly maneuvering yourself into favorable positions amidst the chaos of combat."
    }

    SlotEffect("Incendiary Traversal", icon="fas fa-bolt") {
        "While dashing, you may pass through obstacles and enemies."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Lifesteal", icon="fas fa-circle-plus") { %((lifesteal * 100.0) + "%") }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn BlazeOption([ui]) {
	SlotOption(WantBlaze) {
        BlazeDescription
	}
}

pub fn ability.BlazeAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotRecovering target {
		if Cooldown == 0 {
			BotUseAbility(utility=Utility:Low)
		}
	}

    AbilityCommandBtn {
        BlazeDescription
    }

	SpawnEachIncantation incantation {
		use lifetime=7
		use radius=0.5, dissipate=12
		use ownerColor=true, layer=Layer:Projectile
		use luminous=1

		SpeedModifier(0) // Don't allow other movement to interfere with the charge
		Tangibility(Category:None) // Pass through everything except shields
		SenseAlso(Category:Unit) // Sense units while charging so we can apply damage but don't collide with them
		Sing(@blaze.esfx)
		UngrabMe

		once Arrived(Pointer) {
			incantation.Expire
		}

		with Pointer {
			Thrust(Pointer, speed=)
		}

		on unit.BeforeCollide that {
			if that.Team != owner.Team {
				Attack(that)

				that.Tombstone victim {
					PlayerNameDisplay(owner)
					" charred "
					PlayerNameDisplay(victim)
					" to ash"
				}
			}
		}

		with Tick {
			Spawn trail {
				use parent=unit, body=trail

				Body(pos=parent.Pos, heading=parent.Heading)
				ExpireAfterLifetime(lifetime=7)

 			   	on Paint(interval=3) {
					Spark(bloom=1.5, glare=0.7, bloom=1, feather=1, shine=1, speed=12, splatter=0.15)
				}
			}
		}

		await Tick(lifetime)
	}
}