use glyph=@thunderball.svg, color=#ff8800, damage=16.0, lifesteal=0.3, cooldown=1.5s

pub symbol WantFireball

pub fn FireballDescription([ui]) {
    H1 { "Fireball" }

    P {
        "From your outstretched hand, a fierce, blazing orb of fire hurtles forward, sending enemies tumbling backward. With its short cooldown, you can unleash this swift and reliable spell time and time again."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Lifesteal", icon="fas fa-circle-plus") { %((lifesteal * 100.0) + "%") }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn FireballOption([ui]) {
	SlotOption(WantFireball) {
	    FireballDescription
	}
}

pub fn ability.FireballAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotAttacking target {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

    AbilityCommandBtn {
        FireballDescription
    }

	SpawnEachIncantation incantation {
		use damage = damage * unit.DamageModifier

		Spawn projectile {
			use parent=unit, body=projectile
			use lifetime=90, dissipate=30
			use radius=0.24, speed=48.0
			use luminous=1, layer=Layer:Projectile

			Body(pos=parent.Pos, heading=parent.Heading, velocity=speed*Direction(heading), bullet=true)
			Durability = Durability:Medium
			RecoverSpeed
			ExpireAfterLifetime
			Sing(@fireball.esfx)

			PolygonCollider(
                Circle,
                category=Category:Projectile,
                density=30.5, restitution=1,
            )

			on Paint {
				Streak(bloom=3, bloomAlpha=1, glare=1, shadow=0.25)
				Spark(splatter=0.15, feather=1, shine=0.5)
			}

			on BeforeCollide that {
				if CanHurtSelf || that.Team != owner.Team {
					Attack(that)

					that.Tombstone victim {
						PlayerNameDisplay(owner)
						" scorched "
						PlayerNameDisplay(victim)
					}
				}
			}
			on AfterCollide that {
				if that.Category.Overlaps(Category:Shield) && that.Team != owner.Team {
					CanHurtSelf = true // Can bounce off shield to hurt self
				}

				if that.Durability >= this.Durability {
					Strobe(growth=0.5, shine=1.0)
					Hear(@fireballHit.esfx)

			     	repeat 10 {
						Spark(splatter=1, feather=1, shine=0.5)
					}

					Expire
				}
			}
		}
	}
}