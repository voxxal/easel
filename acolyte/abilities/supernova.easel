use glyph=@crownedExplosion.svg, color=#ff9a00, damage=0, cooldown=7.5s, explodeDelay=0.3s

pub symbol WantSupernova

pub fn SupernovaDescription([ui]) {
    H1 { "Supernova" }

    P {
        "Launch a condensed sphere of pulsating energy which, after a brief delay, explodes with the fury of a supernova, flinging your enemies towards the edges of the universe."
    }

    Blank(expand=true)

    SlotStats {
        SlotStat("Damage", icon="fas fa-heart-crack") { %(damage) }
        SlotStat("Cooldown", icon="fas fa-clock") { %((cooldown / TicksPerSecond) + "s") }
    }
}

pub fn SupernovaOption([ui]) {
	SlotOption(WantSupernova) {
        SupernovaDescription
	}
}

pub fn ability.SupernovaAbility([unit, owner, keycode, btnEdit?, btnOrder?, btnSize?]) {
    use body=unit, life=unit

	on BotAttacking target {
		if Cooldown == 0 {
			BotUseAbility
		}
	}

    AbilityCommandBtn {
        SupernovaDescription
    }

	SpawnEachIncantation incantation {
		Spawn projectile {
			use parent=unit, body=projectile
			use impulse=710.0, aoe=4.0
			use radius=0.1, speed=24.0
			use lifetime=0.75s, dissipate=30
			use luminous=1, layer=Layer:Projectile

			Body(pos=parent.Pos, heading=parent.Heading, velocity=speed*Direction(heading))
			RecoverSpeed
			DecayTurnRate
			Sing(@supernova.esfx)

			on Paint {
				Streak(shadow=0.5, bloom=3, bloomAlpha=1, glare=1, shadow=0.25)
			}

			once Tick(Velocity:TicksTo(Pointer).Min(lifetime)) {
				Speed = 0
				delete RecoverSpeed

				await Tween(duration=explodeDelay, initial=1.0, final=0.0) factor {
					PolygonSprite(shape=Circle(factor*aoe), color=color.Fade(0.95), crater=0.85, layer=Layer:Indicator)
				}

				Expire
			}

			once BeforeDespawn {
				repeat 10 { Spark(speed=26, feather=1, shine=0.5) }
				Spark(radius=aoe, bloom=3, bloomAlpha=0.5, feather=1, glare=0.3, shine=0.2)
				Hear(@supernovaExplode.esfx)

				for that in QueryWithinRadius(aoe, filter=Category:Aoe) {
					if that.Team != owner.Team {
						Attack(that)
						ImpulseAwayAttenuated(that, attenuate=0.4)
						ExpireIfDestructible(that)

						that.Tombstone victim {
							PlayerNameDisplay(owner)
							" launched "
							PlayerNameDisplay(victim)
							" to the edge of the universe "
						}
					}
				}
			}
		}
	}
}