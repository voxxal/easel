use owner = null

pub fn obstacle.Conveyor(shape, convey, pos=@(0,0), heading=0, maxHp=50, radius=0.25, [posOffset?, headingOffset?]) {
    use body=obstacle, life=obstacle
	use color=#3332, fade=#3331,
	use bloom=0, luminous=1,
	use shading=0, shadow=0, layer=Layer:Zone,

	Body(pos = pos + posOffset, heading = heading + headingOffset, immovable=true)
	Durability = Durability:Maximum
	Health
	LavaBehavior

	// reuse=false so a new buff is created each time a new conveyor is entered.
	// This is important because we expect different conveyors to point in different directions and so the buff must be refreshed each time.
	SpawnContact<conveyor>(filter=Category:Aoe) that {
		with Tick {
			that.ForcefulStep(convey.Rotate(obstacle.Heading) / TicksPerSecond)
		}
	}

	PolygonCollider(
        category = Category:Zone,
        collideWith=Category:None, sense=Category:Aoe, isSensor=true,
	)
	PolygonPerimeter

	with Hp {
		await Paint // coalesce multiple changes to HP into a single paint at the end of tick

		use color = HpProportion.Mix(fade, color)

		PolygonSprite

		on Paint(6) {
			Spark(
				radius=, luminous=1, feather=1, shine=0.5, bloom=0, shadow=0,
				dissipate=45, velocity=convey.Rotate(obstacle.Heading),
				glaze=true)
		}
	}

	once BeforeOutOfHealth {
		repeat 10 {
			Spark(
				shadow=0,
				luminous=1, feather=1, shine=1, bloom=2.0,
				dissipate=30, speed=10,
				glaze=true)
		}
	}
}