use owner=null

pub fn obstacle.Healing(shape, pos=@(0,0), heading=0, maxHp=50, heal=4, selfDamage=4, decayDamage=2, radius=0.25, [posOffset?, headingOffset?]) {
    use body=obstacle, life=obstacle
	use healInterval=1s
	use color=#0f9, fade=#0f94,
	use bloom=2.0, bloomAlpha=0.3, luminous=1
	use shading=0, shadow=0, layer=Layer:Zone

	Body(pos = pos + posOffset, heading = heading + headingOffset, immovable=true)
	Durability = Durability:Maximum
	Health
	LavaBehavior

	PolygonCollider(
        category = Category:Zone,
        collideWith=Category:None, sense=Category:Unit,
        isSensor=true,
	)
	PolygonPerimeter

	SpawnContact<healing>(filter=Category:Unit) unit {
		use body = unit

        on Paint(interval=15) {
            if Invisibility {
                await Invisibility
            } else {
                Spark(
                    radius=1.0, dissipate=30, layer=Layer:Spark,
                    color=color.Fade(0.5), fade=1, shine=0.5,
                    luminous=1, feather=1, bloom=0,
                    speed=8)
            }
        }

		with Tick(healInterval) {
			unit.Heal(healInterval * heal / TicksPerSecond)
			obstacle.TakeDamage(selfDamage)
		}
	}

	if decayDamage > 0 {
		with Tick(healInterval) {
			obstacle.TakeDamage(decayDamage)
		}
	}

	with Hp {
		await Paint // coalesce multiple changes to HP into a single paint at the end of tick

		use color = HpProportion.Mix(fade, color)

		PolygonSprite

		on Paint(4) {
			Spark(
				speed=4, dissipate=30,
				luminous=1, feather=1, shine=0.2, bloom=0, shadow=0,
				glaze=true)
		}
	}

	once BeforeOutOfHealth {
		repeat 10 {
			Spark(
				shadow=0,
				luminous=1, feather=1, shine=1, bloom=2,
				dissipate=30, speed=10,
				glaze=true)
		}
	}
}